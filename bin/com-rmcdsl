#!/usr/bin/python
"""
Deletes existing cdsl from filesystem and inventoryfile.
Contains deleting of symbolic links and content of cdsl.
!!ATTENTION!!
   You can remove data with that program. Use on your own risk!
"""
__version__ = "$Revision: 1.10 $"

import getopt
import sys
import logging
logging.basicConfig()

import os.path
sys.path.append(os.path.join(os.path.normpath(sys.prefix), "lib", "python" + sys.version[:3], "site-packages"))

from comoonics import ComLog
from comoonics.ComExceptions import ComException
#from comoonics import GetOpts

from comoonics.cluster import parseClusterConf
from comoonics.cluster.ComClusterInfo import ClusterInfo
from comoonics.cluster.ComClusterRepository import ClusterRepository
from comoonics.cdsl import commonoptparseroptions, dirtrim, get_defaultsfiles, get_defaultsenvkey
from comoonics.cdsl.ComCdsl import CdslDoesNotExistException
from comoonics.cdsl.ComCdslRepository import ComoonicsCdslRepository

try:
    from comoonics.tools.poptparse import PersistentOptionParser as OptionParser
except ImportError:
    from optparse import OptionParser

class CdslNotExistsException(ComException):pass

usage = "usage: %prog [options] fullpathtofile"
parser = OptionParser(usage=usage, description=__doc__)
parser=commonoptparseroptions(parser)

parser.add_option("-s", "--symboliconly", dest="symboliconly", default=True, action="store_true", help="Only removes the symbolic links but not the data itself")

try:
    parser.setGlobalDefaultsFilename(get_defaultsfiles()[0])
    parser.setLocalDefaultsFilename(get_defaultsfiles()[1], get_defaultsenvkey())
except (TypeError, NameError):
    pass

ComLog.setLevel(logging.INFO)
(options, args) = parser.parse_args()


if len(args) != 1:
    parser.error("Failure no or more then one file is given as argument.")

try:          
    doc=parseClusterConf(options.clusterconf)
    #create needed cluster objects
    clusterRepository = ClusterRepository(doc.documentElement,doc)
    clusterInfo = ClusterInfo(clusterRepository)

    cdslRepository = ComoonicsCdslRepository(resource=options.inventoryfile,root=options.root, mountpoint=options.mountpoint, nocreate=True)

    cdsl = cdslRepository.getCdsl(args[0])
    cdsl.delete(force=not options.symboliconly)
except Exception, e:
    print "Error: Could not remove cdsl. Command was %s " %" ".join(sys.argv)
    print "Error: %s" %str(e)
    ComLog.debugTraceLog()
    sys.exit(1)
