#!/usr/bin/python

__version__ = "$revision$"
__description__="""
Binary to remove cdsls
"""

import getopt
import sys
import logging

from comoonics import ComLog
from comoonics.ComExceptions import ComException
#from comoonics import GetOpts

from comoonics.cluster import parseClusterConf
from comoonics.cluster.ComClusterRepository import ClusterRepository
from comoonics.cdsl import commonoptparseroptions, dirtrim
from comoonics.cdsl.ComCdsl import CdslDoesNotExistException
from comoonics.cdsl.ComCdslRepository import CdslRepository

class CdslNotExistsException(ComException):pass

from optparse import OptionParser

usage = "usage: %prog [options] fullpathtofile"
parser = OptionParser(usage)
parser=commonoptparseroptions(parser)

parser.add_option("-s", "--symboliconly", dest="symboliconly", default=False, action="store_true", help="Only removes the symbolic links but not the data itself")

ComLog.setLevel(logging.INFO)
(options, args) = parser.parse_args()


if len(args) != 1:
    parser.error("Failure no or more then one file is given as argument.")
          
doc=comoonics.cluster.parseClusterConf(options.clusterconf)
#create needed cluster objects
clusterRepository = ClusterRepository(doc.documentElement,doc)
clusterInfo = ClusterInfo(clusterRepository)

cdslRepository = CdslRepository(options.inventoryfile,None,False,cdsltree=options.cdsltree,cdsltreeshared=options.cdsltreeshared,cdsllink=options.cdsllink,maxnodeidnum=options.maxnodeidnum,usenodeids=_useNodeids,root=options.root,mountpoint=options.mountpoint,defaultdir=options.defaultdir)

cdsl = cdslRepository.getCdsl(args[0])

if not cdsl:
	raise CdslDoesNotExistException("Cdsl with source " + cdsl.src + " does not exist in Inventoryfile.")

cdsl.delete(force=not options.symboliconly)
