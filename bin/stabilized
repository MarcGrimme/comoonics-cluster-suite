#!/usr/bin/python
"""
stabilized is a module providing the stabilized command in nash.
Supported types are hash and mtime.
Background is to have a tool checking if a file has not changed in content, by polling or with mtime
for some time.
"""
import logging
logging.basicConfig()
import os, sys

import os.path
sys.path.append(os.path.join(os.path.normpath(sys.prefix), "lib", "python" + sys.version[:3], "site-packages"))

from optparse import OptionParser, IndentedHelpFormatter
from comoonics import ComLog
from comoonics.tools import stabilized

def setDebug(option, opt, value, parser):
    ComLog.setLevel(logging.DEBUG)
    setattr(parser.values, option.dest, True)

__version__="$Revision: 1.1 $"
logger=ComLog.getLogger("mgrep")
ComLog.setLevel(logging.INFO)

parser = OptionParser(description=__doc__, version=__version__)
parser.add_option("-d", "--debug", dest="debug", default=False, action="callback", callback=setDebug, help="be more helpful")
parser.add_option("-t", "--type", dest="type", default="mtime", help="set the type")
parser.add_option("-I", "--interval", type="float", dest="interval", default=750, help="set the interval")
parser.add_option("-i", "--iterations", type="int", dest="iterations", default=-1, help="set the iterations")
parser.add_option("-g", "--good", dest="good", type="int", default=10, help="set the good matches")

(options, args) = parser.parse_args()

# First option might be a pattern let's check
if len(args)==0:
    parser.error("Please give a file as first argument")
    sys.exit(1)
elif not os.path.isfile(args[0]):
    parser.error("%s is no file please give a file as first argument" %args[0])
    sys.exit(2)

_file=args[0]
sys.exit(not stabilized.stabilized(file=_file, type=options.type, interval=options.interval,
                                   iterations=options.iterations, good=options.good))
